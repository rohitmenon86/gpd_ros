#! /usr/bin/env python

PACKAGE='gpd_ros'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
direction = gen.add_group("Direction")
camera_position = gen.add_group("Camera_Position")
workspace = gen.add_group("Workspace")

#       Name                Type      Level Description                Default Min   Max
direction.add("x"         , int_t,    0,    "Direction to compare against for filtering [0]",           1,      -1, 1)
direction.add("y"         , int_t,    0,    "Direction to compare against for filtering [1]",           0,      -1, 1)
direction.add("z"         , int_t,    0,    "Direction to compare against for filtering [2]",           0,      -1, 1)

camera_position.add("x1"   , double_t,    0,    "Position of the camera from which the cloud was taken [1]",           0,      -10, 10)
camera_position.add("y1"   , double_t,    0,    "Position of the camera from which the cloud was taken [2]",           0,      -10, 10)
camera_position.add("z1"   , double_t,    0,    "Position of the camera from which the cloud was taken [0]",           0,      -10, 10)

workspace.add("size"         , double_t,    0,    "Cube size",         1,      -2, 2)

gen.add("thresh_rad"       , double_t,    0,    
        "Angle in radians above which grasps are filtered.",
         2.0,      -7, 7)

gen.add("approach_direction", bool_t,   0,    "turn filtering on/off",  False)

exit(gen.generate(PACKAGE, "detect_grasp_test", "detect_grasps"))
